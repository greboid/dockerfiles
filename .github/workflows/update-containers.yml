on:
  workflow_dispatch:
  schedule:
    - cron: '42 12 * * *'
  push:
    paths-ignore:
      - '**/Containerfile'
      - '**/Dockerfile'
      - '.github/**'
      - 'README.md'
name: Update Containers
concurrency: dockerfiles
permissions:
  contents: write
jobs:
  setup-cache:
    name: Setup cache
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@master
        - name: Install bubblewrap and configure AppArmor
          run: |
            sudo apt-get update && sudo apt-get install -y bubblewrap
            echo "kernel.apparmor_restrict_unprivileged_userns = 0" | sudo tee /etc/sysctl.d/60-apparmor-namespace.conf
            sudo sysctl --system
        - name: Setup Go
          uses: actions/setup-go@v6
          with:
            go-version: 'stable'
            cache: true
        - name: Cache build tools and packages
          id: cache-build
          uses: actions/cache@v4
          with:
            path: |
              ~/go/bin/melange
              ~/go/bin/apko
              dockerfiles
              greboid-dockerfiles.rsa
              greboid-dockerfiles.rsa.pub
              repo/
            key: build-cache-${{ github.run_id }}-${{ github.run_attempt }}
        - name: Install melange
          if: steps.cache-build.outputs.cache-hit != 'true'
          uses: mattdowdell/go-installer@v0.3.0
          with:
            package: chainguard.dev/melange
        - name: Install apko
          if: steps.cache-build.outputs.cache-hit != 'true'
          uses: mattdowdell/go-installer@v0.3.0
          with:
            package: chainguard.dev/apko
        - name: Build tool
          if: steps.cache-build.outputs.cache-hit != 'true'
          run: go build -o dockerfiles .
        - name: Generate signing keys
          if: steps.cache-build.outputs.cache-hit != 'true'
          run: |
            echo "${{ secrets.MELANGE_SIGNING_KEY }}" > greboid-dockerfiles.rsa
            chmod 600 greboid-dockerfiles.rsa
            openssl rsa -in greboid-dockerfiles.rsa -pubout -out greboid-dockerfiles.rsa.pub
            chmod 644 greboid-dockerfiles.rsa.pub
        - name: Build required packages
          if: steps.cache-build.outputs.cache-hit != 'true'
          run: |
            mkdir -p repo
            # Get list of packages required by containers that need rebuilding
            REQUIRED_PACKAGES=$(./dockerfiles list-required-packages --registry ${{ secrets.REGISTRY }})
            echo "Required packages for containers that need rebuilding:"
            echo "$REQUIRED_PACKAGES"
            echo ""
            # Build each required package
            for package in $REQUIRED_PACKAGES; do
              echo "Building $package..."
              ~/go/bin/melange build "packages/${package}.yaml" \
                --arch x86_64 \
                --signing-key greboid-dockerfiles.rsa \
                --out-dir repo/ \
                --cache-dir /tmp/melange-cache || echo "Failed to build $package"
            done
  centauri:
    name: Build centauri
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: centauri
  dockercleanup:
    name: Build dockercleanup
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: dockercleanup
  dotege:
    name: Build dotege
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: dotege
  dsp:
    name: Build dsp
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: dsp
  ergo:
    name: Build ergo
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: ergo
  githubmirror:
    name: Build githubmirror
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: githubmirror
  golink:
    name: Build golink
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: golink
  goplum:
    name: Build goplum
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: goplum
  httpredirect:
    name: Build httpredirect
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: httpredirect
  identd:
    name: Build identd
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: identd
  irc-bot:
    name: Build irc-bot
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: irc-bot
  irc-distribution:
    name: Build irc-distribution
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: irc-distribution
  irc-github:
    name: Build irc-github
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: irc-github
  irc-goplum:
    name: Build irc-goplum
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: irc-goplum
  irc-notifier:
    name: Build irc-notifier
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: irc-notifier
  irc-webhook:
    name: Build irc-webhook
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: irc-webhook
  linx-server:
    name: Build linx-server
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: linx-server
  miniflux:
    name: Build miniflux
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: miniflux
  postgres-15:
    name: Build postgres-15
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: postgres-15
  puzzles:
    name: Build puzzles
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: puzzles
  redis:
    name: Build redis
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: redis
  registryauth:
    name: Build registryauth
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: registryauth
  soju:
    name: Build soju
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: soju
  static-web-server:
    name: Build static-web-server
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: static-web-server
  thelounge:
    name: Build thelounge
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: thelounge
  tsp:
    name: Build tsp
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: tsp
  webhooked:
    name: Build webhooked
    needs:
        - setup-cache
    uses: ./.github/workflows/container-builder.yml
    secrets: inherit
    with:
        PROJECT_NAME: webhooked
