FROM {{image "alpine"}} as build

ARG ARCHIVE_URL="{{postgres15_url}}"
ARG ARCHIVE_SUM="{{postgres15_checksum}}"
ARG ENTRYPOINT=39c3dc7046f5f7909179a51e25f2a61158781d57

RUN set -eux; \
    apk add --no-cache \
        {{range $key, $value := alpine_packages "git" -}}
        {{$key}}={{$value}} \
        {{end}}; \
    git clone -b master --single-branch https://github.com/docker-library/postgres /src/docker-postgres; \
    cd /src/docker-postgres; \
    git checkout $ENTRYPOINT;

RUN set -eux; \
    apk add --no-cache \
        {{range $key, $value := alpine_packages "curl" "gcc" "g++" "make" "readline-dev" "zlib-dev" "linux-headers" "musl-locales" "openssl-dev" "scanelf" "rsync" "bash" -}}
        {{$key}}={{$value}} \
        {{end}}; \
    curl -sfLo postgresql.tar.bz2 $ARCHIVE_URL; \
    echo "$ARCHIVE_SUM *postgresql.tar.bz2" | sha256sum -wc -; \
    mkdir -p /usr/local/postgres; \
    tar -C /usr/local/postgres --strip-components 1 -xf postgresql.tar.bz2; \
    cd /usr/local/postgres; \
    ./configure \
        --with-system-tzdata=/usr/share/zoneinfo \
        --with-includes=/usr/local/include \
        --with-libraries=/usr/local/lib \
        --with-ssl=openssl; \
    make -j$(nproc) world; \
    make install-world; \
    make -C contrib install; \
    mkdir -p /src/data; \
    mkdir -p /src/run; \
    chmod 777 /src/run; \
    mkdir -p /etc/postgresql/; \
    mkdir -p /docker-entrypoint-initdb.d/;

RUN set -eux; \
    DEPS=$(scanelf --needed --nobanner --format '%n#p' --recursive -l /usr/local /usr/local/bin/psql /usr/local/bin/postgres /usr/local/bin/initdb \
    | tr ',' '\n' \
    | sort -u \
    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }');\
    mkdir /rootfs; \
    for DEP in $DEPS; do \
      apk add "${DEP}"; \
      apk info -qL "${DEP}" | rsync -aq '--files-from=-' / /rootfs/; \
    done;

RUN ls -lR /rootfs/

FROM {{image "baseroot"}}

ENV LANG en_US.utf8
ENV PGDATA=/var/lib/postgresql/data
ENV PGHOST=127.0.0.1
ENV PGUSER=postgres

COPY --from=build /rootfs/ /
COPY --from=build /usr/bin/env /usr/bin/env
COPY --from=build /bin/sh /bin/sh
COPY --from=build /bin/bash /bin/bash
COPY --from=build /usr/bin/locale /usr/bin/locale
COPY --from=build /bin/ls /bin/ls
COPY --from=build /usr/bin/id /usr/bin/id
COPY --from=build /bin/mkdir /bin/mkdir
COPY --from=build /bin/chmod /bin/chmod
COPY --from=build /usr/local/pgsql /usr/local/
COPY --from=build --chown=65532:65532 --chmod=750 /src/data /var/lib/postgresql
COPY --from=build --chown=65532:65532 --chmod=750 /src/data /var/lib/postgresql/data
COPY --from=build --chown=65532:65532 --chmod=777 /src/run /var/run/psql
COPY --from=build --chown=65532:65532 --chmod=777 /tmp /tmp
COPY --from=build --chown=65532:65532 --chmod=644 /docker-entrypoint-initdb.d/ /docker-entrypoint-initdb.d/
COPY --from=build --chown=65532:65532 --chmod=777 /src/docker-postgres/15/alpine/docker-entrypoint.sh /usr/local/bin/entry.sh
RUN chmod -R 777 /tmp; chmod 777 /var/lib/postgresql

USER nonroot
STOPSIGNAL SIGINT

EXPOSE 5432
ENTRYPOINT ["/usr/local/bin/entry.sh"]
CMD ["postgres", "-c", "listen_addresses=*"]
