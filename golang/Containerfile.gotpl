FROM {{image "alpine"}} as build

ARG GOLICENSETAG="{{github_tag "google/go-licenses"}}"
ARG ARCHIVE_URL="{{golang_url}}"
ARG ARCHIVE_SUM="{{golang_checksum}}"

ENV GOPATH=/go
ENV PATH=$GOPATH/bin:/usr/local/go/bin:$PATH

RUN set -eux; \
    # Dependencies and source for bootstrapping go
    apk add  \
        {{range $key, $value := alpine_packages "curl" "bash" "go" "gcc" "musl-dev" "git" "rsync" "bash" -}}
        {{$key}}={{$value}} \
        {{end}}; \
    curl -sfLo go.tar.gz $ARCHIVE_URL; \
    echo "$ARCHIVE_SUM *go.tar.gz" | sha256sum -wc -; \
    tar -C /usr/local -xzf go.tar.gz; \
    # Bootstrap and install the standard library
    cd /usr/local/go/src && GOROOT_BOOTSTRAP="$(go env GOROOT)" GOHOSTOS="linux" GOHOSTARCH="amd64" ./make.bash; \
    go install std; \
    #Add commonly used go things to rootfs
    {{ range $key, $value := alpine_packages "gcc" "musl-dev" "git" "rsync" "bash" -}}
      apk info -qL {{$key}} | rsync -aq --files-from=- / /rootfs/; \
    {{ end -}} \
    go install github.com/google/go-licenses@$GOLICENSETAG; \
    mkdir -p /rootfs /rootfs/go/src /rootfs/go/bin /rootfs/usr/local/go; \
    rsync -ap /usr/local/go/ /rootfs/usr/local/go/; \
    rsync -ap /go/bin/ /rootfs/go/bin/; \
    # Set up the go path
    chmod -R 777 /rootfs/go;

FROM {{ image "alpine" }}
ENV GOPATH=/go
ENV PATH=$GOPATH/bin:/usr/local/go/bin:$PATH
COPY --from=build /rootfs /
RUN go version
RUN go-licenses
