FROM {{image "alpine" }} as nimbuild

ENV TAG={{ github_tag "nim-lang/nim" }}

ENV PATH=/opt/nim/bin:/opt/nimble/bin:$PATH

RUN set -eux; \
    # Dependencies and source for bootstrapping
    apk add --no-cache --virtual .build-deps \
        {{range $key, $value := alpine_packages "curl" -}}
        {{$key}}={{$value}} \
        {{end}}; \
    curl -sfLo nim.tar.xz https://nim-lang.org/download/nim-${TAG:1}-linux_x64.tar.xz; \
    curl -sfLo nim.tar.xz.sha256 https://nim-lang.org/download/nim-${TAG:1}-linux_x64.tar.xz.sha256; \
    echo "$(awk '{print $1}' nim.tar.xz.sha256) *nim.tar.xz" | sha256sum -wc -; \
    tar -C /tmp -xf nim.tar.xz; \
    mv /tmp/nim-* /tmp/nim; \
    cd /tmp/nim; \
    ./install.sh /usr/bin; \
    cp /tmp/nim/bin/nimble /usr/bin/nimble; \
    apk del --no-network .build-deps; \
    rm -rf \
        /nim.tar.* \
        /tmp/nim; \
    apk add --no-cache \
        {{range $key, $value := alpine_packages "gcc" "musl-dev" "git" -}}
        {{$key}}={{$value}} \
        {{end}};

FROM nimbuild as build

#No tags on the project, will just have to update this as needed until some tags are made
ENV TAG=bc219aa792cc0e4117888b2036a969559f4f2689

RUN set -eux; \
    apk add --no-cache \
        {{range $key, $value := alpine_packages "binutils" "git" "bash" "gcc" "musl-dev" "pcre-dev" "openssl" "openssl-dev" "libsass" "libsass-dev" "sqlite-libs" "rsync" -}}
        {{$key}}={{$value}} \
        {{end}}; \
    git clone -b master --single-branch https://github.com/zedeus/nitter /src/nitter; \
    cd /src/nitter; \
    git checkout $TAG; \
    nimble build -y -d:release; \
    strip -s nitter; \
    nimble scss; \
    nimble md; \
    mkdir -p /rootfs/home/nonroot/public; \
    cp /src/nitter/nitter /rootfs/home/nonroot/nitter; \
    cp -R /src/nitter/public /rootfs/home/nonroot/public

RUN set -eux; \
    DEPS=$(scanelf --needed --nobanner --format '%n#p' --recursive -l /src/nitter/nitter \
    | tr ',' '\n' \
    | sort -u \
    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }');\
    for DEP in $DEPS; do \
      apk add "${DEP}"; \
      apk info -qL "${DEP}" | rsync -aq '--files-from=-' / /rootfs/; \
    done;

FROM {{ image "base" }}

copy --from=build --chown=65532:65532 /rootfs/ /
WORKDIR /home/nonroot
ENTRYPOINT ["/home/nonroot/nitter"]
